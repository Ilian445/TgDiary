#–ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫
import telebot
import sqlite3
import datetime
from datetime import *
from telebot import types
import os



#–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ—Ä—Å–∏–∏
version = '0.2'

#–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
token=os.environ.get('TOKEN')

bot=telebot.TeleBot(token)

comma =['/start', '/help', '/donate', '/print', '/menu', '/enter', '/settings', '/russian', '/literature', '/history', '/sf', '/geography', '/obj', '/lang', '/physics', '/chemestry', '/biology', '/it', '/technology', '/music', '/art', '/geometry', '/algebra']



#–§—É–Ω–∫—Ü–∏–∏
#–†–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
def commander(message):
  if message.text == '/help':
    help(message)
  elif message.text == '/donate':
    donate(message)
  elif message.text == '/print':
    f_print_dz(message)
  elif message.text == '/menu':
    menu(message)
  elif message.text == '/enter':
    f_enter_dz(message)
  elif message.text == '/settings':
    settings(message)
  elif message.text == '/russian' or '/literature' or '/history' or '/sf' or '/geography' or '/obj' or '/lang' or '/physics' or '/chemestry' or '/biology' or '/it' or '/technology' or '/music' or '/art' or '/geometry' or '/algebra':
    sci(message)
  else:
    with open("logs.txt", "a") as file:
      time = datetime.now()
      file.write(f"{time}   Error: 43 unknown command    ID: {message.from_user.id}    Text: {message.text}\n")
      bot.send_message(message.from_user.id,"–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ–≤–µ—Ä–Ω–∞—è –Ω–∞–∂–∞—Ç–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–Ω–æ–ø–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö - /settings")


#–§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏
def write(id, text, subject, message):

  def end01():

    bot.register_next_step_handler(message, end_enter_dz)

    cur.close()
    conn.close()

  #global message
  conn = sqlite3.connect('data.db')
  cur = conn.cursor()

  markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
  menu_btn2 = types.KeyboardButton('‚¨ÖÔ∏è –í –º–µ–Ω—é')
  add_btn2 = types.KeyboardButton('‚ûï –ó–∞–ø–∏—Å–∞—Ç—å –µ—â—ë')
  markup2.add(menu_btn2, add_btn2)


  if message.text in comma:
    commander(message)
  elif subject == 'geometry':
    cur.execute(f"UPDATE data SET geometry = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –≥–µ–æ–º–µ—Ç—Ä–∏–∏ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'algebra':
    cur.execute(f"UPDATE data SET algebra = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –∞–ª–≥–µ–±—Ä–µ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'art':
    cur.execute(f"UPDATE data SET art = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –ò–ó–û –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'music':
    cur.execute(f"UPDATE data SET music = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –º—É–∑—ã–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'technology':
    cur.execute(f"UPDATE data SET technology = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'IT':
    cur.execute(f"UPDATE data SET IT = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'algebra':
    cur.execute(f"UPDATE data SET algebra = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –∞–ª–≥–µ–±—Ä–µ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'biology':
    cur.execute(f"UPDATE data SET biology = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –±–∏–æ–ª–æ–≥–∏–∏ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'chemestry':
    cur.execute(f"UPDATE data SET chemestry = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ —Ö–∏–º–∏–∏ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'physics':
    cur.execute(f"UPDATE data SET physics = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ —Ñ–∏–∑–∏–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'lang':
    cur.execute(f"UPDATE data SET lang = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º—É —è–∑—ã–∫—É –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'obj':
    cur.execute(f"UPDATE data SET obj = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –û–ë–ñ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'geography':
    cur.execute(f"UPDATE data SET geography = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –≥–µ–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'sf':
    cur.execute(f"UPDATE data SET sf = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏—é –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'history':
    cur.execute(f"UPDATE data SET history = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'literature':
    cur.execute(f"UPDATE data SET literature = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  elif subject == 'russian':
    cur.execute(f"UPDATE data SET russian = '{text}' WHERE id = '{id}'")
    conn.commit()
    bot.send_message(id,"‚úÖ –î–∑ –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É –∑–∞–ø–∏—Å–∞–Ω–æ", reply_markup=markup2)
    end01()
  else:
    with open("logs.txt", "a") as file:
      time = datetime.now()
      file.write(f"{time}   Error: unknown subject key    ID: {id}    Subject:{subject}    Text: {text}\n")
      bot.send_message(id,"üò¢ –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö", reply_markup=markup2)


#–§—É–Ω–∫—Ü–∏—è —á—Ç–µ–Ω–∏—è
def read(id, subject):
  global dz_text
  conn = sqlite3.connect('data.db')
  cur = conn.cursor()

  cur.execute(f'SELECT ({subject}) FROM data WHERE id = ({id})')
  dz_text0 = cur.fetchall()
  dz_text = dz_text0[0]

  cur.close()
  conn.close()


#–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
@bot.message_handler(commands=['start'])
def start_message(message):

  #–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç ‚úåÔ∏è, —ç—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–∑ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º! –ü–æ–º–æ—â—å - /help")
  id = message.from_user.id

  #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥
  conn = sqlite3.connect('data.db')
  cur = conn.cursor()

  #–î–æ—Å—Ç–∞—ë–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–¥
  cur.execute('SELECT (id) from data')
  ids = cur.fetchall()

  #–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º
  for i in range (0, len(ids)):
    current = ids[i]
    if current[0] == id:
      find = True
      break
    else:
      find = False
  if find == False:
    cur.execute('INSERT INTO data (id) VALUES (%s)' % id)

  #–°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–¥
  conn.commit()
  cur.close()
  conn.close()


  menu(message)


#–í—ã–≤–æ–¥ –¥–∑
@bot.message_handler(commands=['print'])
def f_print_dz(message):

  global dz
  dz = ''

  markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
  algebra_btn = types.KeyboardButton("0Ô∏è‚É£  –ê–ª–≥–µ–±—Ä–∞")
  geometry_btn = types.KeyboardButton("üìê –ì–µ–æ–º–µ—Ç—Ä–∏—è")
  art_btn = types.KeyboardButton("üñåÔ∏è –ò–ó–û")
  music_btn = types.KeyboardButton("üéº –ú—É–∑—ã–∫–∞")
  technology_btn = types.KeyboardButton("üóúÔ∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è")
  it_btn = types.KeyboardButton("üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞")
  biology_btn = types.KeyboardButton("üå± –ë–∏–æ–ª–æ–≥–∏—è")
  chemestry_btn = types.KeyboardButton("üß™ –•–∏–º–∏—è")
  physics_btn = types.KeyboardButton("üí° –§–∏–∑–∏–∫–∞")
  lang_btn = types.KeyboardButton("üî§ –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫")
  obj_btn = types.KeyboardButton("üõü –û–ë–ñ")
  lit_btn = types.KeyboardButton("üìï –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞")
  ru_btn = types.KeyboardButton("üñäÔ∏è –†—É—Å—Å–∫–∏–π")
  sf_btn = types.KeyboardButton("üôç‚Äç‚ôÇÔ∏è –û–±—â–µ—Å—Ç–æ–≤–∑–Ω–∞–Ω–∏–µ")
  geography_btn = types.KeyboardButton("üó∫Ô∏è –ì–µ–æ–≥—Ä–∞—Ñ–∏—è")
  history_btn = types.KeyboardButton("‚ö±Ô∏è –ò—Å—Ç–æ—Ä–∏—è")
  end_btn = types.KeyboardButton("üî¢ –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
  menu_btn = types.KeyboardButton('‚¨ÖÔ∏è –í –º–µ–Ω—é')

  markup.add(algebra_btn, geometry_btn, art_btn, music_btn, technology_btn, it_btn, biology_btn, chemestry_btn, physics_btn, lang_btn, obj_btn,lit_btn,ru_btn,sf_btn,history_btn,geography_btn, end_btn, menu_btn)
  bot.send_message(message.from_user.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:', reply_markup=markup)
  bot.register_next_step_handler(message,print_dz)

def print_dz(message):

  global dz_text, dz

  stop12 = 'False'

  if message.text in comma:
    stop12 = 'command'
  elif message.text == '0Ô∏è‚É£  –ê–ª–≥–µ–±—Ä–∞':
    read(message.from_user.id, 'algebra')
    dz = dz + '0Ô∏è‚É£  –ê–ª–≥–µ–±—Ä–∞: ' + dz_text[0] +'\n'

  elif message.text == 'üìê –ì–µ–æ–º–µ—Ç—Ä–∏—è':
    read(message.from_user.id, 'geometry')
    dz = dz + 'üìê –ì–µ–æ–º–µ—Ç—Ä–∏—è: ' + dz_text[0] +'\n'

  elif message.text == 'üñåÔ∏è –ò–ó–û':
    read(message.from_user.id, 'art')
    dz = dz + 'üñåÔ∏è –ò–ó–û: ' + dz_text[0] +'\n'

  elif message.text == 'üéº –ú—É–∑—ã–∫–∞':
    read(message.from_user.id, 'music')
    dz = dz + 'üéº –ú—É–∑—ã–∫–∞: ' + dz_text[0] +'\n'

  elif message.text == 'üóúÔ∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è':
    read(message.from_user.id, 'technology')
    dz = dz + 'üóúÔ∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è: ' + dz_text[0] +'\n'

  elif message.text == 'üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞':
    read(message.from_user.id, 'IT')
    dz = dz + 'üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞: ' + dz_text[0] +'\n'

  elif message.text == 'üå± –ë–∏–æ–ª–æ–≥–∏—è':
    read(message.from_user.id, 'biology')
    dz = dz + 'üå± –ë–∏–æ–ª–æ–≥–∏—è: ' + dz_text[0] +'\n'

  elif message.text == 'üß™ –•–∏–º–∏—è':
    read(message.from_user.id, 'chemestry')
    dz = dz + 'üß™ –•–∏–º–∏—è: ' + dz_text[0] +'\n'

  elif message.text == 'üí° –§–∏–∑–∏–∫–∞':
    read(message.from_user.id, 'physics')
    dz = dz + 'üí° –§–∏–∑–∏–∫–∞: ' + dz_text[0] +'\n'

  elif message.text == 'üî§ –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫':
    read(message.from_user.id, 'lang')
    dz = dz + 'üî§ –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫: ' + dz_text[0] +'\n'

  elif message.text == 'üõü –û–ë–ñ':
    read(message.from_user.id, 'obj')
    dz = dz + 'üõü –û–ë–ñ: ' + dz_text[0] +'\n'

  elif message.text == 'üìï –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞':
    read(message.from_user.id, 'literature')
    dz = dz + 'üìï –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞: ' + dz_text[0] +'\n'

  elif message.text == 'üñäÔ∏è –†—É—Å—Å–∫–∏–π':
    read(message.from_user.id, 'russian')
    dz = dz + 'üñäÔ∏è –†—É—Å—Å–∫–∏–π: ' + dz_text[0] +'\n'

  elif message.text == 'üôç‚Äç‚ôÇÔ∏è –û–±—â–µ—Å—Ç–æ–≤–∑–Ω–∞–Ω–∏–µ':
    read(message.from_user.id, 'sf')
    dz = dz + 'üôç‚Äç‚ôÇÔ∏è –û–±—â–µ—Å—Ç–æ–≤–∑–Ω–∞–Ω–∏–µ: ' + dz_text[0] +'\n'

  elif message.text == 'üó∫Ô∏è –ì–µ–æ–≥—Ä–∞—Ñ–∏—è':
    read(message.from_user.id, 'geography')
    dz = dz + 'üó∫Ô∏è –ì–µ–æ–≥—Ä–∞—Ñ–∏—è: ' + dz_text[0] +'\n'

  elif message.text == '‚ö±Ô∏è –ò—Å—Ç–æ—Ä–∏—è':
    read(message.from_user.id, 'history')
    dz = dz + '‚ö±Ô∏è –ò—Å—Ç–æ—Ä–∏—è: ' + dz_text[0] +'\n'

  elif message.text == 'üî¢ –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
    stop12 = 'True'
    
  elif message.text == '‚¨ÖÔ∏è –í –º–µ–Ω—é':
    stop12 = 'menu'
  else:
    with open("logs.txt", "a") as file:
      time = datetime.now()
      file.write(f"{time}   Error: unknown button key    ID: {message.from_user.id}    Text: {message.text}\n")
      bot.send_message(message.from_user.id,"–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ–≤–µ—Ä–Ω–∞—è –Ω–∞–∂–∞—Ç–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–Ω–æ–ø–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö - /settings")

  markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
  algebra_btn = types.KeyboardButton("0Ô∏è‚É£  –ê–ª–≥–µ–±—Ä–∞")
  geometry_btn = types.KeyboardButton("üìê –ì–µ–æ–º–µ—Ç—Ä–∏—è")
  art_btn = types.KeyboardButton("üñåÔ∏è –ò–ó–û")
  music_btn = types.KeyboardButton("üéº –ú—É–∑—ã–∫–∞")
  technology_btn = types.KeyboardButton("üóúÔ∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è")
  it_btn = types.KeyboardButton("üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞")
  biology_btn = types.KeyboardButton("üå± –ë–∏–æ–ª–æ–≥–∏—è")
  chemestry_btn = types.KeyboardButton("üß™ –•–∏–º–∏—è")
  physics_btn = types.KeyboardButton("üí° –§–∏–∑–∏–∫–∞")
  lang_btn = types.KeyboardButton("üî§ –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫")
  obj_btn = types.KeyboardButton("üõü –û–ë–ñ")
  lit_btn = types.KeyboardButton("üìï –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞")
  ru_btn = types.KeyboardButton("üñäÔ∏è –†—É—Å—Å–∫–∏–π")
  sf_btn = types.KeyboardButton("üôç‚Äç‚ôÇÔ∏è –û–±—â–µ—Å—Ç–æ–≤–∑–Ω–∞–Ω–∏–µ")
  geography_btn = types.KeyboardButton("üó∫Ô∏è –ì–µ–æ–≥—Ä–∞—Ñ–∏—è")
  history_btn = types.KeyboardButton("‚ö±Ô∏è –ò—Å—Ç–æ—Ä–∏—è")
  end_btn = types.KeyboardButton("üî¢ –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
  menu_btn = types.KeyboardButton('‚¨ÖÔ∏è –í –º–µ–Ω—é')

  if stop12 == 'False':
    markup.add(algebra_btn, geometry_btn, art_btn, music_btn, technology_btn, it_btn, biology_btn, chemestry_btn, physics_btn, lang_btn, obj_btn,lit_btn,ru_btn,sf_btn,history_btn,geography_btn, end_btn, menu_btn)
    bot.send_message(message.from_user.id, f'–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:', reply_markup=markup)
    bot.register_next_step_handler(message,print_dz)

  elif stop12 == 'True':
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    menu_btn = types.KeyboardButton('‚¨ÖÔ∏è –í –º–µ–Ω—é')
    markup.add(menu_btn)
    bot.send_message(message.from_user.id, text=dz, reply_markup=markup)
    dz = ''
    bot.register_next_step_handler(message,print_dz)

  elif stop12 == 'menu':
    menu(message)

  elif stop12 == 'command':
    commander(message)
  else:
    with open("logs.txt", "a") as file:
      time = datetime.now()
      file.write(f"{time}   Error: unknown stop12 value    ID: {message.from_user.id}    Text: {message.text}\n")
      bot.send_message(message.from_user.id,"–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–æ–∑–Ω–∏–∫–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö - /settings")


#Menu
@bot.message_handler(commands=['menu'])
def menu(message):
  markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
  add_btn = types.KeyboardButton('‚ûï –ó–∞–ø–∏—Å–∞—Ç—å –¥/–∑')
  print_btn = types.KeyboardButton('üî¢ –ü–æ–∫–∞–∑–∞—Ç—å –¥–∑')
  #settings_btn = types.KeyboardButton('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
  markup.add(add_btn, print_btn)#, settings_btn)
  bot.send_message(message.from_user.id, '–ú–µ–Ω—é', reply_markup=markup)
  bot.register_next_step_handler(message, register_menu)

def register_menu(message):
  if message.text in comma:
    commander(message)
  elif message.text == '‚ûï –ó–∞–ø–∏—Å–∞—Ç—å –¥/–∑':
    f_enter_dz(message)
  elif message.text == 'üî¢ –ü–æ–∫–∞–∑–∞—Ç—å –¥–∑':
    f_print_dz(message)
  elif message.text == '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
    #bot.answer_callback_query(callback_query_id=message.from_user.id, text="‚öôÔ∏è –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚öôÔ∏è", show_alert=True)
    bot.register_next_step_handler(message, menu)
  else:
    with open("logs.txt", "a") as file:
      time = datetime.now()
      file.write(f"{time}   Error: unknown button key    ID: {message.from_user.id}    Text: {message.text}\n")


#–í–≤–æ–¥ –¥–∑
@bot.message_handler(commands=['enter'])
def f_enter_dz(message):

  markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
  algebra_btn = types.KeyboardButton("0Ô∏è‚É£  –ê–ª–≥–µ–±—Ä–∞")
  geometry_btn = types.KeyboardButton("üìê –ì–µ–æ–º–µ—Ç—Ä–∏—è")
  art_btn = types.KeyboardButton("üñåÔ∏è –ò–ó–û")
  music_btn = types.KeyboardButton("üéº –ú—É–∑—ã–∫–∞")
  technology_btn = types.KeyboardButton("üóúÔ∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è")
  it_btn = types.KeyboardButton("üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞")
  biology_btn = types.KeyboardButton("üå± –ë–∏–æ–ª–æ–≥–∏—è")
  chemestry_btn = types.KeyboardButton("üß™ –•–∏–º–∏—è")
  physics_btn = types.KeyboardButton("üí° –§–∏–∑–∏–∫–∞")
  lang_btn = types.KeyboardButton("üî§ –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫")
  obj_btn = types.KeyboardButton("üõü –û–ë–ñ")
  lit_btn = types.KeyboardButton("üìï –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞")
  ru_btn = types.KeyboardButton("üñäÔ∏è –†—É—Å—Å–∫–∏–π")
  sf_btn = types.KeyboardButton("üôç‚Äç‚ôÇÔ∏è –û–±—â–µ—Å—Ç–æ–≤–∑–Ω–∞–Ω–∏–µ")
  geography_btn = types.KeyboardButton("üó∫Ô∏è –ì–µ–æ–≥—Ä–∞—Ñ–∏—è")
  history_btn = types.KeyboardButton("‚ö±Ô∏è –ò—Å—Ç–æ—Ä–∏—è")
  menu_btn = types.KeyboardButton('‚¨ÖÔ∏è –í –º–µ–Ω—é')

  markup.add(algebra_btn, geometry_btn, art_btn, music_btn, technology_btn, it_btn, biology_btn, chemestry_btn, physics_btn, lang_btn, obj_btn,lit_btn,ru_btn,sf_btn,history_btn,geography_btn, menu_btn)
  bot.send_message(message.from_user.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:', reply_markup=markup)
  bot.register_next_step_handler(message, enter_dz)

def enter_dz(message):
  global subgect
  stop01 = 'False'

  if message.text in comma:
    stop01 = 'command'

  elif message.text == '0Ô∏è‚É£  –ê–ª–≥–µ–±—Ä–∞':
    subgect = 'algebra'

  elif message.text == 'üìê –ì–µ–æ–º–µ—Ç—Ä–∏—è':
    subgect = 'geometry'

  elif message.text == 'üñåÔ∏è –ò–ó–û':
    subgect = 'art'

  elif message.text == 'üéº –ú—É–∑—ã–∫–∞':
    subgect = 'music'

  elif message.text == 'üóúÔ∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è':
    subgect = 'technology'

  elif message.text == 'üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞':
    subgect = 'IT'

  elif message.text == 'üå± –ë–∏–æ–ª–æ–≥–∏—è':
    subgect = 'biology'

  elif message.text == 'üß™ –•–∏–º–∏—è':
    subgect = 'chemestry'

  elif message.text == 'üí° –§–∏–∑–∏–∫–∞':
    subgect = 'physics'

  elif message.text == 'üî§ –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫':
    subgect = 'lang'

  elif message.text == 'üõü –û–ë–ñ':
    subgect = 'obj'

  elif message.text == 'üìï –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞':
    subgect = 'literature'

  elif message.text == 'üñäÔ∏è –†—É—Å—Å–∫–∏–π':
    subgect = 'russian'

  elif message.text == 'üôç‚Äç‚ôÇÔ∏è –û–±—â–µ—Å—Ç–æ–≤–∑–Ω–∞–Ω–∏–µ':
    subgect = 'sf'

  elif message.text == 'üó∫Ô∏è –ì–µ–æ–≥—Ä–∞—Ñ–∏—è':
    subgect = 'geography'

  elif message.text == '‚ö±Ô∏è –ò—Å—Ç–æ—Ä–∏—è':
    subgect = 'history'
    
  elif message.text == '‚¨ÖÔ∏è –í –º–µ–Ω—é':
    stop01 = 'True'

  else:
    with open("logs.txt", "a") as file:
      time = datetime.now()
      file.write(f"{time}   Error: unknown button key    ID: {message.from_user.id}    Text: {message.text}\n")

  if stop01 == 'False':
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    menu_btn = types.KeyboardButton('‚¨ÖÔ∏è –í –º–µ–Ω—é')
    markup.add(menu_btn)
    bot.send_message(message.from_user.id, f'–í–≤–µ–¥–∏—Ç–µ –¥–∑ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É {message.text} :', reply_markup=markup)
    bot.register_next_step_handler(message, reg_enter_dz)
  elif stop01 == 'command':
    commander(message)
  else:
    menu(message)

def reg_enter_dz(message):
  global subgect

  if message.text in comma:
    commander(message)
  elif message.text == '‚¨ÖÔ∏è –í –º–µ–Ω—é':
    menu(message)
  else:
    write(message.from_user.id, message.text, subgect, message)

def end_enter_dz(message):
  if message.text in comma:
    commander(message)
  elif message.text == '‚¨ÖÔ∏è –í –º–µ–Ω—é':
    menu(message)
  elif message.text == '‚ûï –ó–∞–ø–∏—Å–∞—Ç—å –µ—â—ë':
    f_enter_dz(message)
  else:
    with open("logs.txt", "a") as file:
      time = datetime.now()
      file.write(f"{time}   Error: unknown button key    ID: {message.from_user.id}    Text: {message.text}\n")


#–ü–æ–º–æ—â—å
@bot.message_handler(commands=['help'])
def help(message):
  markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
  menu_btn = types.KeyboardButton('‚¨ÖÔ∏è –í –º–µ–Ω—é')
  markup.add(menu_btn)
  bot.send_message(message.from_user.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤–µ—Å—Ç–∏ —à–∫–æ–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫ –ø—Ä—è–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π /menu, —Ç–∞–∫–∂–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞–ø–∏—Å–∏ –∏ –≤—ã–≤–æ–¥—É –¥–∑ –º–æ–∂–Ω–æ –∏—Å–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã /enter –∏ /print. –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã, –ø–æ—ç—Ç–æ–º—É —Ä–∞–∑–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç –æ—á–µ–Ω—å —Ä–∞–¥ –¥–æ–Ω–∞—Ç–∏–∫–∞–º, —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –º–æ–∂–Ω–æ –≥–ª—è–Ω—É—Ç—å –∑–¥–µ—Å—å - /donate. –ù–∞ —ç—Ç–æ–º –≤—Ä–æ–¥–µ –≤—Å—ë, –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –ø–æ–º–æ—â—å, —Ç–æ –æ–±—Ä–∞—â–∞–π—Å—è - /help\n\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @ilian_meta\n–í–µ—Ä—Å–∏—è: {version}', reply_markup=markup)
  bot.register_next_step_handler(message, reg_help)

def reg_help(message):
  if message.text in comma:
    commander(message)
  elif message.text == '‚¨ÖÔ∏è –í –º–µ–Ω—é':
    menu(message)
  else:
    with open("logs.txt", "a") as file:
      time = datetime.now()
      file.write(f"{time}   Error: unknown button key    ID: {message.from_user.id}    Text: {message.text}\n")


#–ù–∞—Å—Ç—Ä–æ–π–∫–∏
@bot.message_handler(commands=['settings'])
def settings(message):
  bot.send_message(message.from_user.id, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –≥–æ—Ç–æ–≤—ã, –Ω–æ —Å–∫–æ—Ä–æ –±—É–¥—É—Ç, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ - @giant47', reply_markup=markup)
  menu(message)


#–î–æ–Ω–∞—Ç—ã
@bot.message_handler(commands=['donate'])
def donate(message):
  markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
  menu_btn = types.KeyboardButton('‚¨ÖÔ∏è –í –º–µ–Ω—é')
  markup.add(menu_btn)
  bot.send_message(message.from_user.id, '–ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥ –∏–ª–∏ –ø–µ—á–µ–Ω—å–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –º–æ–∂–Ω–æ —Ç—É—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∫ –ø–µ—Ä–µ–≤–æ–¥—É —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —á—Ç–æ —ç—Ç–æ –¥–æ–Ω–∞—Ç –∏ –Ω–∞ —á—Ç–æ –æ–Ω)))\nTinkoff: 2200700771729976\nAlfa-bank: 2200150959802023\nQiWi: https://qiwi.com/n/ILIAN445\nTON: EQDOi-f39PBbaD_1kO6zNZVacjVPwrk_JZnphuzIw_hq-Voy\nBTC: 1M1E4AAcKsipvj9w8fndMnfvHHQ8cKG7d1\n', reply_markup=markup)
  bot.register_next_step_handler(message, reg_donate)

def reg_donate(message):
  if message.text in comma:
    commander(message)
  elif message.text == '‚¨ÖÔ∏è –í –º–µ–Ω—é':
    menu(message)
  else:
    with open("logs.txt", "a") as file:
      time = datetime.now()
      file.write(f"{time}   Error: unknown button key    ID: {message.from_user.id}    Text: {message.text}\n")


#–ö–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
@bot.message_handler(commands=['russian', 'literature', 'history', 'sf', 'geography', 'obj', 'lang', 'physics', 'chemestry', 'biology', 'it', 'technology', 'music', 'art', 'geometry', 'algebra'])
def sci(message):
  global dz_text

  #–†–∞–∑–±–∏—Ä–∞–µ–º—Å—è —Å –ø—Ä–µ–¥–º–µ—Ç–æ–º
  s = message.text[1:]

  #–ï—Å–ª–∏ –æ–Ω —Ö–æ—á–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∑
  if s == 'russian' or s == 'literature' or s == 'history' or s == 'sf' or s == 'geography' or s == 'obj' or s == 'lang' or s == 'physics' or s == 'chemestry' or s == 'biology' or s == 'it' or s == 'technology' or s == 'music' or s == 'art' or s == 'geometry' or s == 'algebra':

    subject01 = s
    #–ß–∏—Ç–∞–µ–º –±–¥
    read(message.from_user.id, subject01)
    dz_text = dz_text[0]

    #–ö–Ω–æ–ø–∫–∏
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    menu_btn = types.KeyboardButton('‚¨ÖÔ∏è –í –º–µ–Ω—é')
    add_btn = types.KeyboardButton('‚ûï –ó–∞–ø–∏—Å–∞—Ç—å –¥–∑')
    markup.add(menu_btn, add_btn)

    #–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    bot.send_message(message.from_user.id, f'–î–∑ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É : {dz_text}', reply_markup=markup)
    bot.register_next_step_handler(message, reg_sci)
  else:
    #–í–æ–∑–∏–º—Å—è —Å –ø–µ—Ä–º–µ–Ω–Ω—ã–º–∏
    hw = (s[s.find(" "):])
    subject01 = s.replace(hw,"")
    hw = hw[1:]

    #–ü–∏—à–µ–º –≤ –±–¥
    write(message.from_user.id, hw, subject01, message)
      

def reg_sci(message):
  if message.text in comma:
    commander(message)
  elif message.text == '‚¨ÖÔ∏è –í –º–µ–Ω—é':
    menu(message)
  elif message.text == '‚ûï –ó–∞–ø–∏—Å–∞—Ç—å –¥–∑':
    f_enter_dz(message)
  else:
    with open("logs.txt", "a") as file:
      time = datetime.now()
      file.write(f"{time}   Error: unknown button key    ID: {message.from_user.id}    Text: {message.text}\n")



#Main polling
bot.infinity_polling()